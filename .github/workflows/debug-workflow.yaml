name: debug

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
      
jobs:
  directories-to-apply:
    runs-on: ubuntu-latest  
    name: Get Directories To Apply
    outputs:
        directories-to-apply-result: ${{ steps.find-directories.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
            files: envs/**/terragrunt.hcl
            matrix: true
      # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.

      - name: Get changed modules
        id: changed-dirs
        uses: tj-actions/changed-files@v44.1.0
        with:
            files: modules/**/*.tf
            dir_names: true
            dir_names_max_depth: 2
            matrix: true
      - name: Get files that depend on changed directories
        id: dependent-terragrunt-files
        uses: actions/github-script@v7
        env:
          changed_dirs: ${{ steps.changed-dirs.outputs.modified_files }}
        with:
          script: |
            const changedDirs = JSON.parse(process.env.changed_dirs || "[]");
          
            // Call the function and log the results
            const returnValue = {
              anyModuleChanged: changedDirs.length > 0,  
              dependentFiles: [],
            };
            console.log(`Dependent files: ${JSON.stringify(returnValue)}`);
            return returnValue;
      - name: Find Directories To Apply
        id: find-directories
        uses: actions/github-script@v7
        env:
          ENVS_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          MODULES_RELATED_CHANGED_FILES: ${{ steps.dependent-terragrunt-files.outputs.result.dependentFiles }}
        with:
          script: |
            console.log(process.env.MODULES_RELATED_CHANGED_FILES);
            const envFiles = JSON.parse(process.env.ENVS_CHANGED_FILES || "[]");
            const moduleFiles = JSON.parse(process.env.MODULES_RELATED_CHANGED_FILES || "[]");
            const terragruntRegex = /(.*)\/terragrunt.hcl/;
            //create a full list of changed terragrunt files
            const allFiles = [...envFiles];
            moduleFiles.forEach((element) => {
              if (!allFiles.includes(element.filePath)) {
                allFiles.push(element.filePath);
              }
            });
            
            const envCommonPath = {};
            
            const returnValue = {
                anyDirectoryToApply: false,
                dirs: []
            };
            for (const envName in envCommonPath) {
              returnValue.dirs.push(commonPath(envCommonPath[envName].files));
              returnValue.anyDirectoryToApply = true;
            }
            return returnValue;
  apply-on-directory:
    needs: [directories-to-apply]
    if: ${{ fromJSON(needs.directories-to-apply.outputs.directories-to-apply-result).anyDirectoryToApply }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJSON(needs.directories-to-apply.outputs.directories-to-apply-result).dirs }}
      max-parallel: 1
      fail-fast: false
    steps:
      - name: dummy
        env:
          THE_DIR: matrix.dir
        run: |
          echo "$THE_DIR"
